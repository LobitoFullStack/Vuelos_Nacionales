
# Base de datos para un sistema de agencia de viajes
# Crear una base de datos para un sistema de agencia de viajes que permita almacenar la información de los empleados, clientes, reservas y destinos de viaje. La base de datos debe contener las siguientes tablas:
----- AHORA SOLO TENGO EL LOGIN CREADO Y FUNCIONAL ------


# Tabla 'tipo_empleado' para almacenar los diferentes tipos de empleados (jefe, administrador, agente de viaje).
# Tabla 'persona' para almacenar la información personal de los usuarios (nombre, apellido, dirección, teléfono, documento de identidad).
# Tabla 'usuario' para almacenar la información de inicio de sesión y el tipo de empleado (correo, contraseña, tipo de empleado, hora de inicio de sesión, hora de fin de sesión).
# Tabla 'cliente' para almacenar la información de los clientes (nombre, apellido, dirección, teléfono, documento de identidad).
# Tabla 'reserva' para almacenar la información de las reservas de viaje (fecha de reserva, fecha de inicio de viaje, fecha de fin de viaje, destino, cliente, agente de viaje).
# Tabla 'destino' para almacenar la información de los destinos de viaje (nombre, descripción, precio).




-- Tabla 'tipo_empleado' para almacenar los diferentes tipos de empleados
CREATE TABLE tipo_empleado (
    cod_tipo_empleado INT PRIMARY KEY,
    tipo_empleado VARCHAR(50) NOT NULL
);

-- Tabla 'persona' para almacenar la información personal de los usuarios
CREATE TABLE persona (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    direccion VARCHAR(100),
    telefono VARCHAR(20),
	documento_identidad VARCHAR(20) UNIQUE NOT NULL  -- UNIQUE aquí
);

-- Tabla 'usuario' para almacenar la información de inicio de sesión y el tipo de empleado
CREATE TABLE usuario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_persona INT NOT NULL,
    correo VARCHAR(100) NOT NULL,
    contraseña VARCHAR(100) NOT NULL,
    cod_tipo_empleado INT,
    FOREIGN KEY (id_persona) REFERENCES persona(id),
    FOREIGN KEY (cod_tipo_empleado) REFERENCES tipo_empleado(cod_tipo_empleado)
);

-- Insertar tipos de empleados a la tabla 'tipo_empleado'
INSERT INTO tipo_empleado (cod_tipo_empleado, tipo_empleado) VALUES (1, 'Jefe');
INSERT INTO tipo_empleado (cod_tipo_empleado, tipo_empleado) VALUES (2, 'Administrador');
INSERT INTO tipo_empleado (cod_tipo_empleado, tipo_empleado) VALUES (3, 'Agente de Viaje');

-- Insertar una nueva persona
INSERT INTO persona (nombre, apellido, direccion, telefono,documento_identidad) VALUES ('Lobi', 'lobitos', 'SMP', '4444444', '10701122');
SELECT LAST_INSERT_ID() INTO @id_persona;

-- Supongamos que el id_persona obtenido es 1 (asignado a Lobito)

-- Ahora, puedes insertar el nuevo usuario en la tabla usuario
INSERT INTO usuario (id_persona, correo, contraseña, cod_tipo_empleado)
VALUES (@id_persona, 'lobito@lobito.com', '123', 1);

select * from usuario;
select * from persona;
select * from tipo_empleado;


SELECT u.id_persona, u.id, p.nombre, p.apellido, p.direccion, p.telefono, p.documento_identidad, tp.tipo_empleado
FROM usuario u
INNER JOIN persona p ON u.id_persona = p.id
INNER JOIN tipo_empleado tp ON u.cod_tipo_empleado = tp.cod_tipo_empleado
WHERE u.correo = 'lobito' AND u.contraseña = '123';

